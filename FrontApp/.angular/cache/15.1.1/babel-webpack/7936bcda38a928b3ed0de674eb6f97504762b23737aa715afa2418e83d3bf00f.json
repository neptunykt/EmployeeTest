{"ast":null,"code":"import { NG_VALIDATORS } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nexport let DateValidatorDirective = /*#__PURE__*/(() => {\n  class DateValidatorDirective {\n    constructor() {\n      this.validator = this.dateValidator();\n    }\n    validate(c) {\n      return this.validator(c);\n    }\n    dateValidator() {\n      return c => {\n        let isValid = true;\n        if (c.value) {\n          let data = c.value.split(\"/\");\n          let d = new Date(data[2] + \"/\" + data[1] + \"/\" + data[0]);\n          isValid = d && d.getMonth() + 1 == data[1] && d.getDate() == Number(data[0]) && d.getFullYear() == Number(data[2]);\n        }\n        if (isValid) {\n          return null;\n        } else {\n          return {\n            datevalidator: {\n              valid: false\n            }\n          };\n        }\n      };\n    }\n  }\n  DateValidatorDirective.ɵfac = function DateValidatorDirective_Factory(t) {\n    return new (t || DateValidatorDirective)();\n  };\n  DateValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DateValidatorDirective,\n    selectors: [[\"\", \"datevalidator\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: DateValidatorDirective,\n      multi: true\n    }])]\n  });\n  return DateValidatorDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}