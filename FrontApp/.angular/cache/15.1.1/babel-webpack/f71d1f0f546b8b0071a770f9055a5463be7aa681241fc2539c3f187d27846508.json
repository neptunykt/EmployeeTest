{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ModalMessageComponent } from \"./modal-message/modal-message.component\";\nimport { EmployeeEditComponent } from \"./employee-edit/employee-edit.component\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { MatTable } from \"@angular/material/table\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { environment } from \"src/environments/environment\";\nimport { FormControl } from \"@angular/forms\";\nimport { BehaviorSubject } from \"rxjs/internal/BehaviorSubject\";\nlet AppComponent = class AppComponent {\n  constructor(http, dialog, employeeDataService) {\n    this.http = http;\n    this.dialog = dialog;\n    this.employeeDataService = employeeDataService;\n    this.fileName = \"\";\n    this.searchDateText = \"\";\n    this.employees = [];\n    this.totalRows = 0;\n    this.pageSize = 5;\n    this.currentPage = 0;\n    this.displayedColumns = [\"id\", \"payRollNumber\", \"surname\", \"forenames\", \"dateOfBirth\", \"telephone\", \"mobile\", \"address\", \"address2\", \"postCode\", \"emailHome\", \"startDate\", \"action\"];\n    this.pageSizeOptions = [5, 10, 25, 100];\n    this.datemask = [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/];\n    this.searchField = new FormControl();\n    this.searchDateFormControl = new FormControl();\n    this.searchTerm$ = new BehaviorSubject(\"\");\n    this.loading = true;\n    this.environmentUrl = environment.api;\n    this.dataSource = new MatTableDataSource();\n    this.rowId = \"\";\n    this.title = \"pagination\";\n    this.empTbSort = new MatSort();\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.empTbSort;\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.fileName = file.name;\n      const formData = new FormData();\n      let header = new HttpHeaders();\n      formData.append(\"upload\", file, file.name);\n      header.append(\"Content-Type\", \"multipart/form-data\");\n      header.append(\"Accept\", \"application/json\");\n      const upload$ = this.http.post(`${this.environmentUrl}/api/Employee/LoadCsv`, formData, {\n        headers: header\n      });\n      upload$.subscribe(result => {\n        this.dialog.open(ModalMessageComponent, {\n          data: result\n        });\n      });\n    }\n  }\n  loadData() {\n    this.loading = true;\n    this.searchTerm$.subscribe(search => {\n      this.employeeDataService.getEmployees(this.currentPage, this.pageSize, null, null, search).subscribe(employeePaginator => {\n        this.dataSource.data = employeePaginator.pageItems;\n        this.paginator.pageIndex = employeePaginator.currentPageIndex;\n        this.paginator.length = employeePaginator.totalItems;\n        this.loading = false;\n      });\n    });\n  }\n  searchDateFn() {\n    console.log(this.searchDateValid.valid);\n  }\n  clearDateFn() {\n    console.log(this.searchDateValid);\n  }\n  pageChanged(event) {\n    var _a, _b;\n    console.log({\n      event\n    });\n    this.pageSize = (_a = event.pageSize) !== null && _a !== void 0 ? _a : 5;\n    this.currentPage = (_b = event.pageIndex) !== null && _b !== void 0 ? _b : 1;\n    this.loadData();\n  }\n  editEmployee(employee) {\n    this.dialog.open(EmployeeEditComponent, {\n      data: employee\n    });\n  }\n};\n__decorate([ViewChild(MatTable, {\n  static: true\n})], AppComponent.prototype, \"table\", void 0);\n__decorate([ViewChild(MatPaginator)], AppComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(\"empTbSort\")], AppComponent.prototype, \"empTbSort\", void 0);\n__decorate([ViewChild('searchDate')], AppComponent.prototype, \"searchDateValid\", void 0);\nAppComponent = __decorate([Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}